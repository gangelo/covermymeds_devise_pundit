<% content_for :title do %>Add Task<% end %>
<div class="page-header">
  <h1>Add Task</h1>
</div>

<%= render partial: 'shared/errors', locals: { resource: @task, i18n_key: 'errors.messages.not_saved', i18n_args: nil } %>

<%= form_with(scope: :task, url: tasks_path, local: true) do |f| %>
  <div class="form-group">
    <div class='input-md'><%= f.label 'Company' %></div>
    <div class='input-md'>
      <%= select_tag("company_id", nil, {
            prompt: "--- Select ---",
            onchange: "companies_onchange(this);",
            class: "select-min-width" }) %>
    </div>
  </div>

  <div class="form-group">
    <div class='input-md'><%= f.label 'Project' %></div>
    <div class='input-md'>
      <%= select_tag("task[project_id]", nil, {
            prompt: "--- Select ---",
            onchange: "projects_onchange(this);",
            class: "select-min-width" }) %>
    </div>
  </div>

  <div class="form-group">
    <div class='input-md'><%= f.label :name %></div>
    <div class='input-md'><%= f.text_field :name, id: :task_name, class: "form-control" %></div>
  </div>

  <div class='actions form-group'>
    <div class='input-md'>
      <%= submit_tag 'Save', id: :submit_button, class: 'btn btn-primary' %>
      <%= link_to 'Cancel', tasks_path, class: 'btn btn-default' %>
    </div>
  </div>
<% end %>

<% content_for :javascripts do %>
  <script>
    let selectedCompanyId = "<%= @task.project.nil? ? 0 : @task.project.company_id %>";
    let selectedProjectId = "<%= @task.project_id.nil? ? 0 : @task.project_id %>";

    let selectElementIdForCompany = "company_id";
    let selectElementIdForProject = "task_project_id";
    let textInputElementIdForTaskName = "task_name";

    $(function() {
      initSelect(selectElementIdForCompany);
      initSelect(selectElementIdForProject);

      enableSubmitButton(textInputElementIdForTaskName, selectedCompanyId > 0 && selectedProjectId > 0);
      enableControl(textInputElementIdForTaskName, selectedCompanyId > 0 && selectedProjectId > 0);

      let url = "<%= companies_path %>";
      loadSelectFrom(url, null, selectElementIdForCompany, selectedCompanyId);

      if (selectedCompanyId > 0) {
        let url = "<%= projects_company_projects_path(0).gsub(/0/, '') %>";
        loadSelectFrom(url, selectedCompanyId, selectElementIdForProject, selectedProjectId);
      }
    });

    function companies_onchange(selectElement) {
      enableSubmitButton(false);
      enableControl(textInputElementIdForTaskName, false);
      initSelect(selectElementIdForProject);
      $("#" + textInputElementIdForTaskName).val("");
      if (!isValidSelection(selectElement)) {
        return;
      }
      let companyId = getSelectedValueFor(selectElement);
      let url = "<%= projects_company_projects_path(0).gsub(/0/, '') %>";
      loadSelectFrom(url, companyId, selectElementIdForProject, selectedProjectId);
    };

    function projects_onchange(selectElement) {
      enableSubmitButton(false);
      enableControl(textInputElementIdForTaskName, false);
      $("#" + textInputElementIdForTaskName).val("");
      if (!isValidSelection(selectElement)) {
        return;
      }
      enableSubmitButton(true);
      enableControl(textInputElementIdForTaskName, true);
    };

    function loadSelectFrom(url, urlParams, selectId, selectedOptionValue) {
      $.ajax({
        url: urlParams == null ? url : url + urlParams,
        success: function(data, textStatus, jqXHR) {
          if (guardData(data)) {
            enableControl(selectId, true);
            addItemsTo(selectId, selectedOptionValue, data["response"]);
          }
        },
        error: function(jqXHR, textStatus, errorThrown) {
          alert("AJAX Error:" + textStatus);
        }
      });
    };

    function guardData(data) {
      json = data["response"];
      status = data["status"];
      if (status != "ok") {
        alert(data["message"]);
        return false;
      }
      return true;
    };

    function addItemsTo(selectId, selectedValue, json) {
      let $select = $('#' + selectId);
      $.each(json, function (i, item) {
        let option = $('<option>', { value: item.id, text: item.name });
        if (item.id == selectedValue) {
          option.attr('selected', 'selected');
        }
        $select.append(option);
      });
    };

    function getSelectedValueFor(selectElement) {
      let selected = selectElement.options[selectElement.selectedIndex];
      return selected.value;
    };

    function isValidSelection(selectElement) {
      return getSelectedValueFor(selectElement) > 0;
    };

    function enableSubmitButton(enable) {
      enableControl("submit_button", enable);
    };

    function enableControl(elementId, enable) {
      $("#" + elementId).prop("disabled", !enable);
    };

    function initSelect(selectId) {
      let $select = $("#" + selectId)
      $select.find("option").remove();
      $select.append($('<option>', { value: 0, text: "--- Select ---" }));
      enableControl(selectId, false);
    }
  </script>
<% end %>
